; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Патч «WoT это Классика!»"
#define MyAppVersion "0.1"
#define AppBuild "0to1"
#define MyAppPublisher "Mr. Bendy"
#define MyAppURL "https://wot-classic.ru/"

[Setup]
AppId={{B1D4B3B9-F30D-4D03-9070-1AA5CBF03AA2}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
OutputBaseFilename=wek_patch_lesta_{#AppBuild}
ArchitecturesAllowed=x64compatible

; For MT RUBY
DefaultDirName={code:GetLestaGamePath}
; For WoT EU
; DefaultDirName={code:GetWGGamePath}

DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
Compression=lzma2/max
;Compression=none
SolidCompression=no
LZMAUseSeparateProcess=yes
LZMANumBlockThreads=6
DiskSpanning=yes

WizardStyle=classic
WizardImageFile=wizard.bmp
WizardSmallImageFile=small.bmp
SetupIconFile=wot.ico

Uninstallable=no
DirExistsWarning=no
DisableDirPage=no
; Change to auto before releasing
ShowLanguageDialog=yes
DisableWelcomePage=yes
FlatComponentsList=no
RestartIfNeededByRun=no

[Languages]
; Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "russian"; MessagesFile: "Russian.isl"

;[Types]
;Name: "full"; Description: "Полная установка"
;Name: "custom"; Description: "Выборочная установка"; Flags: iscustom

;[Components]
;Name: "sounds"; Description: "Старые звуки"; Types: full
;Name: "interface"; Description: "Старые интерфейсы"; Types: full
;Name: "interface/login"; Description: "Экран логина"; Types: full
;Name: "interface/hangar"; Description: "Интерфейс ангара"; Types: full
;Name: "interface/battle"; Description: "Интерфейс боя"; Types: full
;Name: "interface/text"; Description: "Старый текст"; Types: full
;Name: "graphics"; Description: "Старая графика"; Types: full
;Name: "graphics/models"; Description: "SD-модели"; Types: full
;Name: "graphics/maps"; Description: "Старые карты"; Types: full
;Name: "graphics/effects"; Description: "Старые эффекты"; Types: full
;Name: "hangars"; Description: "Старые ангары"; Types: full
;Name: "hangars/v1basic"; Description: "Базовый V1"; Types: full
;Name: "hangars/v1premium"; Description: "Премиум V1"; Types: full
;Name: "hangars/v2basic"; Description: "Базовый V2"; Types: full
;Name: "hangars/v2premium"; Description: "Премиум V2"; Types: full

;[Tasks]
;Name: "cleanmods"; Description: "Удалить все установленные моды (настоятельно рекомендуется)"
;
;[InstallDelete]
;Type: filesandordirs; Name: "{app}\mods\{code:GetVersion}\*"; Tasks: "cleanmods"
;Type: filesandordirs; Name: "{app}\mods\configs"; Tasks: "cleanmods"
;Type: filesandordirs; Name: "{app}\res_mods\{code:GetVersion}\*"; Tasks: "cleanmods"

[Files]
; Source: "files\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_core"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist
; Source: "files\configs\*"; DestDir: "{app}\mods\configs"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist
; 
; Source: "files\sounds\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_sounds"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: sounds
; Source: "files\sounds\res_mods\*"; DestDir: "{app}\res_mods\{code:GetVersion}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: sounds
; Source: "files\sounds\configs\*"; DestDir: "{app}\mods\configs"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: sounds
; 
; Source: "files\interface\login\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_login"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/login
; Source: "files\interface\login\res_mods\*"; DestDir: "{app}\res_mods\{code:GetVersion}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/login
; 
; Source: "files\interface\hangar\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_hangar_gui"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/hangar
; Source: "files\interface\hangar\res_mods\*"; DestDir: "{app}\res_mods\{code:GetVersion}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/hangar
; Source: "files\interface\hangar\configs\*"; DestDir: "{app}\mods\configs"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/hangar
; 
; Source: "files\interface\battle\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_battle_gui"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/battle
; Source: "files\interface\battle\res_mods\*"; DestDir: "{app}\res_mods\{code:GetVersion}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/battle
; Source: "files\interface\battle\configs\*"; DestDir: "{app}\mods\configs"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/battle
; 
;Source: "files\interface\text\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_locale_ru"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/text
;Source: "files\interface\text\res_mods\*"; DestDir: "{app}\res_mods\{code:GetVersion}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: interface/text
; 
; Source: "files\graphics\models\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_sd_models"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: graphics/models
; Source: "files\graphics\models\res_mods\*"; DestDir: "{app}\res_mods\{code:GetVersion}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: graphics/models
; 
; Source: "files\graphics\maps\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_maps"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: graphics/maps
; Source: "files\graphics\maps\res_mods\*"; DestDir: "{app}\res_mods\{code:GetVersion}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: graphics/maps
; 
; Source: "files\graphics\effects\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_effects"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: graphics/effects
; Source: "files\graphics\effects\res_mods\*"; DestDir: "{app}\res_mods\{code:GetVersion}"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: graphics/effects
; 
; Source: "files\hangars\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_hangars"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: hangars
; Source: "files\hangars\configs\*"; DestDir: "{app}\mods\configs"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: hangars
; Source: "files\hangars\v1basic\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_hangars"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: hangars/v1basic
; Source: "files\hangars\v1premium\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_hangars"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: hangars/v1premium
; Source: "files\hangars\v2basic\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_hangars"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: hangars/v2basic
; Source: "files\hangars\v2premium\mods\*"; DestDir: "{app}\mods\{code:GetVersion}\wek_hangars"; Flags: ignoreversion recursesubdirs createallsubdirs skipifsourcedoesntexist; Components: hangars/v2premium
Source: "files\xdelta.exe"; Flags: dontcopy
Source: "files\patches\*"; Flags: dontcopy
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Run]
Filename: "{app}\WorldOfTanks.exe"; Description: "Запустить игру"; Flags: nowait postinstall skipifsilent unchecked

[Code]
const
  CheckFileName = 'paths.xml';
  CurVersion = '1.29.0.0';
  CurMajorVersion = 29;
  CurMiddleVersion = 0;
  CurMinorVersion = 0;
  CurBuild = 1;
  
var
  FileStatusLabel: TLabel;
  VersionStatusLabel: TLabel;
  IsWoTExecFound: Boolean;
  SiteButton: TButton;
  DiscordButton: TButton;
  CleanModsLabel: TLabel;
  LatestMajorVersion: Integer;
  LatestMiddleVersion: Integer;
  LatestMinorVersion: Integer;
  LatestBuild: Integer;

function StrSplit(Text: String; Separator: String): TArrayOfString;
var
  i, p: Integer;
  Dest: TArrayOfString; 
begin
  i := 0;
  repeat
    SetArrayLength(Dest, i+1);
    p := Pos(Separator,Text);
    if p > 0 then begin
      Dest[i] := Copy(Text, 1, p-1);
      Text := Copy(Text, p + Length(Separator), Length(Text));
      i := i + 1;
    end else begin
      Dest[i] := Text;
      Text := '';
    end;
  until Length(Text)=0;
  Result := Dest
end;

function LoadValueFromXML(const AFileName, APath: string): string;
var
  XMLNode: Variant;
  XMLDocument: Variant;  
begin
  Result := '';
  XMLDocument := CreateOleObject('Msxml2.DOMDocument.6.0');
  try
    XMLDocument.async := False;
    XMLDocument.load(AFileName);
    if (XMLDocument.parseError.errorCode <> 0) then
      MsgBox('Файл XML повреждён. ' + 
        XMLDocument.parseError.reason, mbError, MB_OK)
    else
    begin
      XMLDocument.setProperty('SelectionLanguage', 'XPath');
      XMLNode := XMLDocument.selectSingleNode(APath);
      Result := XMLNode.text;
    end;
  except
    MsgBox('An error occured!' + #13#10 + GetExceptionMessage, mbError, MB_OK);
  end;
end;

function LoadValueFromXMLString(const AString, APath: string): string;
var
  XMLNode: Variant;
  XMLDocument: Variant;  
begin
  Result := '';
  XMLDocument := CreateOleObject('Msxml2.DOMDocument.6.0');
  try
    XMLDocument.async := False;
    XMLDocument.loadXML(AString);
    if (XMLDocument.parseError.errorCode <> 0) then
      MsgBox('Файл XML повреждён. ' + 
        XMLDocument.parseError.reason, mbError, MB_OK)
    else
    begin
      XMLDocument.setProperty('SelectionLanguage', 'XPath');
      XMLNode := XMLDocument.selectSingleNode(APath);
      Result := XMLNode.text;
    end;
  except
    MsgBox('An error occured!' + #13#10 + GetExceptionMessage, mbError, MB_OK);
  end;
end;

function GetVersion(Param: String): String;
var
  FilePath: String;
begin
  FilePath := ExpandConstant('{app}\paths.xml');
  if FileExists(FilePath) then
    Result := ExtractFileName(LoadValueFromXML(FilePath, '//root/Paths/Path'))
  else Result := CurVersion;
end;

procedure CheckForFile(SelectedDir: String);
var
  FilePath: String;
  FoundVersion: String;
  VerArray: TArrayOfString;
  MajorVersion: Integer;
  MiddleVersion: Integer;
  MinorVersion: Integer;
begin
  FilePath := ExpandConstant(SelectedDir + '\' + CheckFileName);
  if FileExists(FilePath) then
  begin
    FoundVersion := ExtractFileName(LoadValueFromXML(FilePath, '//root/Paths/Path'));
    VerArray := StrSplit(FoundVersion, '.');
    MajorVersion := StrToInt(VerArray[1]);
    MiddleVersion := StrToInt(VerArray[2]);
    MinorVersion := StrToInt(VerArray[3]);
    IsWoTExecFound := true;
    FileStatusLabel.Caption := Format('Найден клиент «Мира Танков» версии %s.', [FoundVersion]);
    FileStatusLabel.Font.Color := clBlack
    
    if MajorVersion <> CurMajorVersion then
    begin
      VersionStatusLabel.Caption := Format('Моды были созданы для версии %s, и их работоспособность не'#13#10'гарантируется. Рекомендуем проверить наличие более свежей версии на нашем'#13#10'портале.', [CurVersion]);
      VersionStatusLabel.Font.Color := clRed;
    end
    else if MiddleVersion <> CurMiddleVersion then
    begin
      VersionStatusLabel.Caption := Format('Моды были созданы для версии %s, поэтому есть вероятность'#13#10'возникновения проблем совместимости.', [CurVersion]);
      VersionStatusLabel.Font.Color := $0060FF;
    end
    else if MinorVersion <> CurMinorVersion then
    begin
      VersionStatusLabel.Caption := Format('Моды были созданы для версии %s, но шанс возникновения проблем'#13#10'минимален.', [CurVersion]);
      VersionStatusLabel.Font.Color := clGreen;
    end
    else
    begin
      VersionStatusLabel.Caption := 'Моды совместимы с данной версией игры.';
      VersionStatusLabel.Font.Color := clGreen;
    end;
  end
  else
  begin
    IsWoTExecFound := false;
    FileStatusLabel.Caption := 'Клиент игры не найден. Пожалуйста, проверьте указанный путь.';
    FileStatusLabel.Font.Color := clRed;
    VersionStatusLabel.Caption := '';
  end;
end;

procedure OpenBrowser(Sender: TObject);
var
  ErrorCode: Integer;
  Button: TButton;
begin
  Button := Sender as TButton;
  if Button.Caption = 'Наш сайт' then
    ShellExec('open', 'https://wot-classic.ru', '', '', SW_SHOWNORMAL, ewNoWait, ErrorCode)
  else if Button.Caption = 'Discord' then
    ShellExec('open', 'https://discord.gg/36mrMDeFMJ', '', '', SW_SHOWNORMAL, ewNoWait, ErrorCode);
end;

procedure CreateWelcomeButtons;
begin
  if (SiteButton = nil) and (DiscordButton = nil) then
  begin
    SiteButton := TButton.Create(WizardForm);
    with SiteButton do
    begin
      Parent := WizardForm;
      Left := ScaleX(16);
      Top := WizardForm.NextButton.Top;
      Width := WizardForm.NextButton.Width;
      Height := WizardForm.NextButton.Height;
      Caption := 'Наш сайт'
      OnClick := @OpenBrowser;
    end;
    
    DiscordButton := TButton.Create(WizardForm);
    with DiscordButton do
    begin
      Parent := WizardForm;
      Left := SiteButton.Left + SiteButton.Width + 8;
      Top := WizardForm.NextButton.Top;
      Width := WizardForm.NextButton.Width;
      Height := WizardForm.NextButton.Height;
      Caption := 'Discord'
      OnClick := @OpenBrowser;
    end;
  end;
end;

procedure DestroyWelcomeButtons;
begin
  if (SiteButton <> nil) and (DiscordButton <> nil) then
  begin
    SiteButton.Free;
    SiteButton := nil;
    DiscordButton.Free;
    DiscordButton := nil;
  end;
end;

function GetLestaGamePath(Param: String): String;
var
  LGCPath: String;
begin
  try
    if not RegQueryStringValue(HKEY_CURRENT_USER, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\Lesta Game Center', 'DisplayIcon', LGCPath) then begin
      if not RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\Lesta Game Center', 'DisplayIcon', LGCPath) then
        Result := 'C:\Games\Tanki';
        Exit;
    end;
    LGCPath := ExtractFileDir(LGCPath);
    Result := LoadValueFromXML(LGCPath+'\preferences.xml', '//protocol/application/games_manager/selectedGames/WOT');
  except
    Result := 'C:\Games\Tanki';
  end;
end;

function GetWGGamePath(Param: String): String;
var
  WGCPath: String;
begin
  try
    if not RegQueryStringValue(HKEY_CURRENT_USER, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\Wargaming Game Center', 'DisplayIcon', WGCPath) then begin
      if not RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\Wargaming Game Center', 'DisplayIcon', WGCPath) then
        Result := 'C:\Games\World_Of_Tanks_EU';
        Exit;
    end;
    WGCPath := ExtractFileDir(WGCPath);
    Result := LoadValueFromXML(WGCPath+'\preferences.xml', '//protocol/application/games_manager/selectedGames/WOT');
  except
    Result := 'C:\Games\World_Of_Tanks_EU';
  end;
end;

procedure CurPageChanged(CurPageID: Integer);
begin
  if (CurPageID = wpWelcome) or (CurPageID = wpFinished) then
    CreateWelcomeButtons
  else
    DestroyWelcomeButtons;
  if CurPageID = wpSelectDir then
  begin
    CheckForFile(WizardForm.DirEdit.Text);
  end;
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if (CurPageID = wpSelectDir) and (not IsWoTExecFound) then
  begin
    if MsgBox('Установщик не смог найти файлы игры по указанному пути.'#13#10''#13#10'Вы уверны, что хотите продолжить установку?',
              mbError,
              MB_YESNO or MB_DEFBUTTON2) = IDYES
      then Result := True
    else Result := False;
  end
  else Result := True;
end;

procedure DirEditChange(Sender: TObject);
begin
  CheckForFile(WizardForm.DirEdit.Text);
end;

procedure InitializeWizard;
begin
  WizardForm.DirEdit.OnChange := @DirEditChange;
  
  // CreateWelcomeButtons;
  
  Log(WizardForm.BackButton.Caption);
  
  FileStatusLabel := TLabel.Create(WizardForm);
  with FileStatusLabel do
  begin
    Parent := WizardForm.SelectDirPage;
    Top := WizardForm.DirEdit.Top + WizardForm.DirEdit.Height + 8;
    Left := WizardForm.DirEdit.Left;
  end;

  VersionStatusLabel := TLabel.Create(WizardForm);
  with VersionStatusLabel do
  begin
    Parent := WizardForm.SelectDirPage;
    Top := WizardForm.DirEdit.Top + WizardForm.DirEdit.Height + 8 + FileStatusLabel.Height + 8;
    Left := WizardForm.DirEdit.Left;
  end;

  WizardForm.TasksList.Height := 32;

  CleanModsLabel := TLabel.Create(WizardForm);
  with CleanModsLabel do
  begin
    Parent := WizardForm.SelectTasksPage;
    Top := 180;
    Left := WizardForm.TasksList.Left;
    Caption := ExpandConstant('Использование модов из серии {#MyAppName} вместе с модами от других'#13#10'разработчиков может привести к ошибкам в работе модификаций и даже к'#13#10'отказу работоспособности игры.');
    Font.Color := clRed;
  end;
end;